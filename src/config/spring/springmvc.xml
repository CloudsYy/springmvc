<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">

	<!-- 配置handler -->
	<!-- <bean name="/queryItems.action" class="cn.itcast.ssm.controller.ItemsController"/> -->

    <mvc:annotation-driven conversion-service="conversionService" validator="validator"></mvc:annotation-driven>

	<mvc:view-controller path="/WEB-INF/jsp/registered.jsp" view-name="registered"/>

   <!-- <mvc:default-servlet-handler/>

    <mvc:resources mapping="/images/" location="/images/**"/>
    <mvc:resources mapping="/js/" location="/js/**"/>
    <mvc:resources mapping="/css/" location="/css/**"/>
    <mvc:resources mapping="/WEB-INF/jsp/" location="/jsp/**"/>-->

	<!-- 校验器 -->
	<bean id="validator"
		  class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
		<!-- 校验器-->
		<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
		<!-- 指定校验使用的资源文件，如果不指定则默认使用classpath下的ValidationMessages.properties -->
		<property name="validationMessageSource" ref="messageSource" />
	</bean>
	<!-- 校验错误信息配置文件 -->
	<bean id="messageSource"
		  class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<!-- 资源文件名-->
		<property name="basenames" value="CustomValidationMessages"></property>
		<!-- 资源文件编码格式 -->
		<!--<property name="defaultEncoding" value="UTF-8"/>-->
		<property name="fileEncodings" value="utf-8" />

		<!--<property name="fileEncodings" >
			<props>
				<prop key="classpath:CustomValidationMessages">UTF-8</prop>
			</props>
		</property>-->
		<!-- 对资源文件内容缓存时间，单位秒 -->
		<property name="cacheSeconds" value="120" />
	</bean>

	<bean class="cn.itcast.ssm.controller.Exception.CustomeExceptionResolver"/>

	<!-- 配置包扫描，扫描controller包 -->
	<context:component-scan base-package="cn.itcast.ssm.controller"/>

	<!-- 参数绑定是需要注入到适配器里头，而这里的conversionService则是spring提供的适配器接口
	ConversionSerivce 最重点的目的是将http的请求参数以什么形式进行类型转换，简单来说HTTP请求都是以String的
	方式进行传输的，但是我们是入参却是多姿多彩的数据类型，所以SpringMVC是通过ConversionSerivce进行参数的绑
	定转换的。-->

	<!-- 注解映射器:org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping 
		注解适配器:org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter -->
	<!-- 处理器映射器 -->
	<!-- 根据bean的name进行查找Handler 将action的url配置在bean的name中 -->
	<!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" 
		/> 处理器适配器 <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/> -->
	<!-- 注解型处理器映射器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> -->
	<!-- 注解型处理器适配器 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> -->
	<!-- 视图解析器 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
            <!-- 日期类型转换器-->
		    <property name="converters">
				<list>
					<bean class="cn.itcast.ssm.controller.converter.CustomDateConverter"/>
				</list>
			</property>
	</bean>
      <!--全局异常处理器
        只要找到handlerExceptionResolver 就是全局异常处理器-->
     <bean class="cn.itcast.ssm.controller.Exception.CustomeExceptionResolver"/>

    <!-- 文件上传 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 设置上传文件的最大尺寸为5MB -->
        <property name="maxUploadSize">
            <value>5242880</value>
        </property>
    </bean>

    <!--全局拦截器 -->
    <mvc:interceptors>
        <!--多个拦截器,顺序执行 -->
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="cn.itcast.ssm.Interceptor.HandlerInterceptor1"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="cn.itcast.ssm.Interceptor.HandlerInterceptor2"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
			<mvc:exclude-mapping path="/regisitered.action"/>
            <bean class="cn.itcast.ssm.Interceptor.LoginInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>